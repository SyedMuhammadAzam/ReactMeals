{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedm\\\\Desktop\\\\ReactMeals\\\\src\\\\Meals\\\\AvilableMeals.js\";\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyCoffee = [{\n  id: 'm1',\n  Name: 'Black Coffee',\n  description: 'It served without added sugar, milk, or flavorings',\n  prize: 450\n}, {\n  id: 'm2',\n  Name: 'Decaf',\n  description: 'Decaf coffee is brewed with these decaffeinated beans.',\n  prize: 550\n}, {\n  id: 'm3',\n  Name: 'Espresso',\n  description: 'A single espresso is a one-ounce shot',\n  prize: 510\n}, {\n  id: 'm4',\n  Name: 'Latte',\n  description: 'This classic drink is typically 1/3 espresso and 2/3 steamed milk, topped with a thin layer of foam',\n  prize: 720\n}, {\n  id: 'm5',\n  Name: 'Cappuccino',\n  description: 'This espresso-based drink is similar to a latte, but the frothy top layer is thickers',\n  prize: 390\n}];\n\nconst AvailbleMeals = () => {\n  const CoffeeList = DummyCoffee.map(coffee => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: coffee.id,\n    Name: coffee.Name,\n    description: coffee.description,\n    prize: coffee.prize\n  }, coffee.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 49\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: CoffeeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AvailbleMeals;\nexport default AvailbleMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailbleMeals\");","map":{"version":3,"sources":["C:/Users/syedm/Desktop/ReactMeals/src/Meals/AvilableMeals.js"],"names":["Card","classes","MealItem","DummyCoffee","id","Name","description","prize","AvailbleMeals","CoffeeList","map","coffee","meals"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,EAAE,EAAC,IADc;AAEjBC,EAAAA,IAAI,EAAC,cAFY;AAGjBC,EAAAA,WAAW,EAAG,oDAHG;AAIjBC,EAAAA,KAAK,EAAG;AAJS,CAAD,EAOnB;AACGH,EAAAA,EAAE,EAAC,IADN;AAEGC,EAAAA,IAAI,EAAC,OAFR;AAGGC,EAAAA,WAAW,EAAG,wDAHjB;AAIGC,EAAAA,KAAK,EAAG;AAJX,CAPmB,EAcpB;AACIH,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,IAAI,EAAC,UAFT;AAGIC,EAAAA,WAAW,EAAG,uCAHlB;AAIIC,EAAAA,KAAK,EAAG;AAJZ,CAdoB,EAqBpB;AACIH,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,IAAI,EAAC,OAFT;AAGIC,EAAAA,WAAW,EAAG,qGAHlB;AAIIC,EAAAA,KAAK,EAAG;AAJZ,CArBoB,EA2BnB;AACGH,EAAAA,EAAE,EAAC,IADN;AAEGC,EAAAA,IAAI,EAAC,YAFR;AAGGC,EAAAA,WAAW,EAAG,uFAHjB;AAIGC,EAAAA,KAAK,EAAG;AAJX,CA3BmB,CAApB;;AAmCA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAMC,UAAU,GAAGN,WAAW,CAACO,GAAZ,CAAgBC,MAAM,iBAAG,QAAC,QAAD;AAExC,IAAA,EAAE,EAAEA,MAAM,CAACP,EAF6B;AAGxC,IAAA,IAAI,EAAEO,MAAM,CAACN,IAH2B;AAIxC,IAAA,WAAW,EAAEM,MAAM,CAACL,WAJoB;AAKxC,IAAA,KAAK,EAAEK,MAAM,CAACJ;AAL0B,KACnCI,MAAM,CAACP,EAD4B;AAAA;AAAA;AAAA;AAAA,UAAzB,CAAnB;AAUA,sBACI;AAAS,IAAA,SAAS,EAAEH,OAAO,CAACW,KAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApBD;;KAAMD,a;AAqBN,eAAeA,aAAf","sourcesContent":["import Card from '../UI/Card'\r\nimport classes from './AvailableMeals.module.css'\r\nimport MealItem from './MealItem/MealItem'\r\n\r\nconst DummyCoffee = [{\r\n    id:'m1',\r\n    Name:'Black Coffee', \r\n    description : 'It served without added sugar, milk, or flavorings' ,\r\n    prize : 450 ,\r\n    \r\n}\r\n,{\r\n    id:'m2',\r\n    Name:'Decaf', \r\n    description : 'Decaf coffee is brewed with these decaffeinated beans.' ,\r\n    prize : 550\r\n}\r\n,\r\n{\r\n    id:'m3',\r\n    Name:'Espresso', \r\n    description : 'A single espresso is a one-ounce shot' ,\r\n    prize : 510\r\n}\r\n,\r\n{\r\n    id:'m4',\r\n    Name:'Latte', \r\n    description : 'This classic drink is typically 1/3 espresso and 2/3 steamed milk, topped with a thin layer of foam' ,\r\n    prize : 720\r\n}\r\n,{\r\n    id:'m5',\r\n    Name:'Cappuccino', \r\n    description : 'This espresso-based drink is similar to a latte, but the frothy top layer is thickers' ,\r\n    prize : 390\r\n}\r\n,]\r\n\r\nconst AvailbleMeals = () => {\r\n\r\n    const CoffeeList = DummyCoffee.map(coffee =><MealItem\r\n        key={coffee.id}\r\n        id={coffee.id}\r\n        Name={coffee.Name}\r\n        description={coffee.description}\r\n        prize={coffee.prize}\r\n    \r\n      />\r\n      \r\n      )\r\n    return(\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                {CoffeeList}\r\n            </Card>\r\n            \r\n        </section>\r\n    )\r\n}\r\nexport default AvailbleMeals;"]},"metadata":{},"sourceType":"module"}