{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedm\\\\Desktop\\\\ReactMeals\\\\src\\\\Meals\\\\AvilableMeals.js\";\nimport classes from './Meals/AvailbleMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyCoffee = [{\n  id: 'm1',\n  Name: 'Black Coffee',\n  description: 'It served without added sugar, milk, or flavorings',\n  prize: 450\n}, {\n  id: 'm2',\n  Name: 'Decaf',\n  description: 'Decaf coffee is brewed with these decaffeinated beans.',\n  prize: 550\n}, {\n  id: 'm3',\n  Name: 'Espresso',\n  description: 'A single espresso is a one-ounce shot',\n  prize: 510\n}, {\n  id: 'm4',\n  Name: 'Latte',\n  description: 'This classic drink is typically 1/3 espresso and 2/3 steamed milk, topped with a thin layer of foam',\n  prize: 720\n}, {\n  id: 'm5',\n  Name: 'Cappuccino',\n  description: 'This espresso-based drink is similar to a latte, but the frothy top layer is thickers',\n  prize: 390\n}];\n\nconst AvailbleMeals = () => {\n  const CoffeeList = DummyCoffee.map(coffee => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [coffee.Name, \",\", coffee.description, \", \", coffee.prize]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: CoffeeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AvailbleMeals;\nexport default AvailbleMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailbleMeals\");","map":{"version":3,"sources":["C:/Users/syedm/Desktop/ReactMeals/src/Meals/AvilableMeals.js"],"names":["classes","DummyCoffee","id","Name","description","prize","AvailbleMeals","CoffeeList","map","coffee"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,kCAApB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,EAAE,EAAC,IADc;AAEjBC,EAAAA,IAAI,EAAC,cAFY;AAGjBC,EAAAA,WAAW,EAAG,oDAHG;AAIjBC,EAAAA,KAAK,EAAG;AAJS,CAAD,EAMnB;AACGH,EAAAA,EAAE,EAAC,IADN;AAEGC,EAAAA,IAAI,EAAC,OAFR;AAGGC,EAAAA,WAAW,EAAG,wDAHjB;AAIGC,EAAAA,KAAK,EAAG;AAJX,CANmB,EAapB;AACIH,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,IAAI,EAAC,UAFT;AAGIC,EAAAA,WAAW,EAAG,uCAHlB;AAIIC,EAAAA,KAAK,EAAG;AAJZ,CAboB,EAoBpB;AACIH,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,IAAI,EAAC,OAFT;AAGIC,EAAAA,WAAW,EAAG,qGAHlB;AAIIC,EAAAA,KAAK,EAAG;AAJZ,CApBoB,EA0BnB;AACGH,EAAAA,EAAE,EAAC,IADN;AAEGC,EAAAA,IAAI,EAAC,YAFR;AAGGC,EAAAA,WAAW,EAAG,uFAHjB;AAIGC,EAAAA,KAAK,EAAG;AAJX,CA1BmB,CAApB;;AAkCA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAMC,UAAU,GAAGN,WAAW,CAACO,GAAZ,CAAgBC,MAAM,iBAAI;AAAA,eAAKA,MAAM,CAACN,IAAZ,OAAmBM,MAAM,CAACL,WAA1B,QAAyCK,MAAM,CAACJ,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B,CAAnB;AACA,sBACI;AAAA,2BACI;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;KAAMD,a;AAWN,eAAeA,aAAf","sourcesContent":["import classes from './Meals/AvailbleMeals.module.css'\r\n\r\n\r\nconst DummyCoffee = [{\r\n    id:'m1',\r\n    Name:'Black Coffee', \r\n    description : 'It served without added sugar, milk, or flavorings' ,\r\n    prize : 450\r\n}\r\n,{\r\n    id:'m2',\r\n    Name:'Decaf', \r\n    description : 'Decaf coffee is brewed with these decaffeinated beans.' ,\r\n    prize : 550\r\n}\r\n,\r\n{\r\n    id:'m3',\r\n    Name:'Espresso', \r\n    description : 'A single espresso is a one-ounce shot' ,\r\n    prize : 510\r\n}\r\n,\r\n{\r\n    id:'m4',\r\n    Name:'Latte', \r\n    description : 'This classic drink is typically 1/3 espresso and 2/3 steamed milk, topped with a thin layer of foam' ,\r\n    prize : 720\r\n}\r\n,{\r\n    id:'m5',\r\n    Name:'Cappuccino', \r\n    description : 'This espresso-based drink is similar to a latte, but the frothy top layer is thickers' ,\r\n    prize : 390\r\n}\r\n,]\r\n\r\nconst AvailbleMeals = () => {\r\n\r\n    const CoffeeList = DummyCoffee.map(coffee => <li>{coffee.Name},{coffee.description}, {coffee.prize}</li>)\r\n    return(\r\n        <section>\r\n            <ul>\r\n                {CoffeeList}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\nexport default AvailbleMeals;"]},"metadata":{},"sourceType":"module"}