{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedm\\\\Desktop\\\\ReactMeals\\\\src\\\\Store\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport MyContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {};\n\n  const myContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: myContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"irLoCnUjZMazMtjqft6WkB530Qg=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/syedm/Desktop/ReactMeals/src/Store/ContextProvider.js"],"names":["React","useReducer","MyContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","ContextProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","myContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,eAAtB;;AAEI,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG,EADa;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAIE,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACLX,MAAAA,KAAK,EAAGM,YADH;AAELL,MAAAA,WAAW,EAAGQ;AAFT,KAAP;AAID;AAGd,CAXG;;AAaN,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAaC,kBAAb,IAAmClB,UAAU,CAACK,WAAD,EAAeH,gBAAf,CAAnD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAcG,MAAAA,IAAI,EAAGA;AAArB,KAAD,CAAlB;AAEH,GAHD;;AAIA,QAAMS,uBAAuB,GAAIC,EAAD,IAAQ,CAEvC,CAFD;;AAIA,QAAMC,SAAS,GAAG;AACdnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADH;AAEdC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFT;AAGdmB,IAAAA,OAAO,EAAGJ,oBAHI;AAIdK,IAAAA,UAAU,EAAGJ;AAJC,GAAlB;AAOJ,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEE,SAA3B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAxBD;;GAAMV,e;;KAAAA,e;AAyBN,eAAeA,eAAf","sourcesContent":["import React , {useReducer} from 'react'\r\n\r\nimport MyContext from './CartContext'\r\n\r\n    const defaultCartState = {\r\n        items : [],\r\n        totalAmount : 0\r\n    }\r\n      const cartReducer = (state , action) => {\r\n              if(action.type === 'ADD') {\r\n                  const updatedItems = state.items.concat(action.item)\r\n                  const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n                  return {\r\n                    items : updatedItems,\r\n                    totalAmount : updatedTotalAmount\r\n                }\r\n                }\r\n              \r\n      \r\n  }\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    const [cartState , dispatchCartAction] = useReducer(cartReducer , defaultCartState)\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type:'ADD' , item : item})\r\n\r\n    }\r\n    const removeItemToCartHandler = (id) => {\r\n\r\n    }\r\n\r\n    const myContext = {\r\n        items :cartState.items,\r\n        totalAmount: cartState.totalAmount ,\r\n        addItem : addItemToCartHandler ,\r\n        removeItem : removeItemToCartHandler ,\r\n    }\r\n\r\nreturn (\r\n    <MyContext.Provider value={myContext}>\r\n        {props.children}\r\n    </MyContext.Provider>\r\n)\r\n}\r\nexport default ContextProvider;"]},"metadata":{},"sourceType":"module"}