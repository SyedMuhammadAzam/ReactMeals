{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\syedm\\\\Desktop\\\\ReactMeals\\\\src\\\\Store\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport MyContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const myContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: myContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/syedm/Desktop/ReactMeals/src/Store/ContextProvider.js"],"names":["React","useReducer","MyContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","ContextProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","myContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKE,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAVD;;AAYA,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACrCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMS,uBAAuB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAKA,QAAMC,SAAS,GAAG;AACdnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADH;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBmB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAAlB;AAOJ,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEE,SAA3B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAxBC;;GAAMV,e;;KAAAA,e;AAyBR,eAAeA,eAAf","sourcesContent":["import React , {useReducer} from 'react'\r\n\r\nimport MyContext from './CartContext'\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n  };\r\n  \r\n  const cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n      const updatedItems = state.items.concat(action.item);\r\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n    return defaultCartState;\r\n  };\r\n\r\n  const ContextProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n  \r\n    const addItemToCartHandler = (item) => {\r\n      dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n  \r\n    const removeItemToCartHandler = (id) => {\r\n      dispatchCartAction({type: 'REMOVE', id: id});\r\n    };\r\n  \r\n\r\n    const myContext = {\r\n        items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemToCartHandler,\r\n    }\r\n\r\nreturn (\r\n    <MyContext.Provider value={myContext}>\r\n        {props.children}\r\n    </MyContext.Provider>\r\n)\r\n}\r\nexport default ContextProvider;"]},"metadata":{},"sourceType":"module"}